Ejecutamos el scrip de reduction para value = 10000000
Time taken by reduction operation using a function: 863 ms ± 1.91 ms per loop (mean ± std. dev. of 2 runs, 1 loop each)
And the result of the sum of numbers in the range [0, value) is: 5001228.999118767

Time taken by reduction operation using numpy.sum(): 3.8 ms ± 4.54 µs per loop (mean ± std. dev. of 2 runs, 100 loops each)
Now, the result using numpy.sum(): 5001228.999118682 
 
Time taken by reduction operation using numpy.ndarray.sum(): 3.76 ms ± 3.06 µs per loop (mean ± std. dev. of 2 runs, 100 loops each)
Now, the result using numpy.ndarray.sum(): 5001228.999118682
El tiempo de cupy.sum midiendo con la funcion time.time() time es 0.009362459182739258 segundos

Time taken by reduction operation using cupy.sum and %timeit(): 304 µs ± 3.82 ns per loop (mean ± std. dev. of 2 runs, 10,000 loops each)
Now, the result using cupy.sum(): 5000776.320440389 
 
